#!/usr/bin/env python3

import irqclient
import argparse
import sys

def get_irq_client(host, port):
    api = irqclient.IrqServiceApi(host, port)
    client = irqclient.IrqClient(api)
    return client


def main():
    """
    A command-line tool that makes using the IRQ web service easier.

    It provides several commands to a user and then formats the results of the
    commands in an easy-to-read table format.
    """

    parser = argparse.ArgumentParser()

    parser.add_argument('--host',
        required=True,
        metavar='host',
        type=str,
        nargs='?',
        default='localhost',
        help='host of API web service')
    parser.add_argument('--port',
        required=True,
        metavar='port',
        type=str,
        nargs='?',
        default='5000',
        help='port of API web service')

    subparsers = parser.add_subparsers(title='commands')

    show_irq_info_parser = subparsers.add_parser('show_irq_info')
    show_irq_info_parser.set_defaults(action='show_irq_info')

    show_interrupts_parser = subparsers.add_parser('show_interrupts')
    show_interrupts_parser.set_defaults(action='show_interrupts')
    show_interrupts_parser.add_argument('--duration',
        required=False,
        default="60",
        metavar='seconds',
        type=str,
        help='length of period in seconds over which to count interrupt totals')
    show_interrupts_parser.add_argument('--cpu',
        required=False,
        metavar='cpu_num',
        type=str,
        help='CPU number to get interrupt totals for')

    show_cpu_affinity_parser = subparsers.add_parser('show_cpu_affinity')
    show_cpu_affinity_parser.set_defaults(action='show_cpu_affinity')
    show_cpu_affinity_parser.add_argument('--irq',
        required=True,
        metavar='irq',
        type=str,
        help='IRQ for which to get current CPU affinity')

    set_cpu_affinity_parser = subparsers.add_parser('set_cpu_affinity')
    set_cpu_affinity_parser.set_defaults(action='set_cpu_affinity')
    set_cpu_affinity_parser.add_argument('--irq',
        required=True,
        metavar='irq',
        type=str,
        help='IRQ for which to set it\'s CPU affinity')
    set_cpu_affinity_parser.add_argument('--affinity-mask',
        required=True,
        metavar='affinity_mask',
        type=str,
        help='CPU affinity mask to set for IRQ')

    args = parser.parse_args()
    action = args.action

    client = get_irq_client(args.host, args.port)
    print_helper = irqclient.PrintHelper(sys.stdout)

    if action == 'show_irq_info':
        print_helper.print_irq_info(client.get_irq_info())
    elif action == 'show_interrupts':
        if args.cpu is None:
            print_helper.print_interrupts(client.get_interrupts_for_period(args.duration))
        else:
            print_helper.print_interrupts_for_cpu(client.get_interrupts_for_period_for_cpu(args.cpu, args.duration))
    elif action == 'show_cpu_affinity':
        print_helper.print_cpu_affinity(client.get_irq_cpu_affinity(args.irq))
    elif action == 'set_cpu_affinity':
        print_helper.print_cpu_affinity(client.set_irq_cpu_affinity(args.irq, args.affinity_mask))

if __name__ == "__main__":
  main()
